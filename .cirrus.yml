# Attention: if you submit an improvement for a Namecoin Cirrus config, please
# file a GitHub issue about it at the namecoin/meta repo, so that we can make
# sure it propagates to all the other Namecoin repos.  Thanks!

task:
  name: ShellCheck
  container:
    image: fedora:latest
    cpu: 1
    memory: 1G
  install_script: dnf install -y ShellCheck
  lint_script: bash testdata/shellcheck.bash

task:
  name: "Compile Go $GO_VERSION $GOOS $GOARCH$MODULES_NAME"
  alias: Compile
  container:
    image: golang:$GO_VERSION
    cpu: 1
    memory: 1G
  path_script:
    - source testdata/move_to_gopath.bash
  matrix:
    - env:
        GOOS: "linux"
        GOARCH: "amd64"
    - env:
        GOOS: "linux"
        GOARCH: "386"
        CFLAGS: "-m32"
      install_script:
        - dpkg --add-architecture i386
        - apt-get update
        - apt-get install -y gcc-multilib libc6-dev:i386
    - env:
        GOOS: "linux"
        GOARCH: "arm"
        CC: "arm-linux-gnueabihf-gcc"
      install_script:
        - dpkg --add-architecture armhf
        - apt-get update
        - apt-get install -y gcc-arm-linux-gnueabihf libc6-dev:armhf
    - env:
        GOOS: "linux"
        GOARCH: "arm64"
        CC: "aarch64-linux-gnu-gcc"
      install_script:
        - dpkg --add-architecture arm64
        - apt-get update
        - apt-get install -y gcc-aarch64-linux-gnu libc6-dev:arm64
    - env:
        GOOS: "linux"
        GOARCH: "ppc64le"
        CC: "powerpc64le-linux-gnu-gcc"
      install_script:
        - dpkg --add-architecture ppc64el
        - apt-get update
        - apt-get install -y gcc-powerpc64le-linux-gnu libc6-dev:ppc64el
    - env:
        GOOS: "windows"
        GOARCH: "amd64"
        CC: "x86_64-w64-mingw32-gcc-win32"
      install_script:
        - apt-get update
        - apt-get install -y gcc-mingw-w64-x86-64
    - env:
        GOOS: "windows"
        GOARCH: "386"
        CC: "i686-w64-mingw32-gcc-win32"
      install_script:
        - apt-get update
        - apt-get install -y gcc-mingw-w64-i686
  matrix:
    - env:
        GO111MODULE: "off"
        MODULES_NAME: " Modules Off"
      fetch_script:
        - cd $(go env GOPATH)/src/github.com/"$CIRRUS_REPO_FULL_NAME"
        - go get -tags "$GOX_TAGS" -d -v -t github.com/$CIRRUS_REPO_FULL_NAME/...
        - go generate github.com/$CIRRUS_REPO_FULL_NAME/...
        - go get -tags "$GOX_TAGS" -d -v -t github.com/$CIRRUS_REPO_FULL_NAME/...
    - env:
        MODULES_NAME: ""
      fetch_script:
        - cd $(go env GOPATH)/src/github.com/"$CIRRUS_REPO_FULL_NAME"
        - go mod init github.com/"$CIRRUS_REPO_FULL_NAME"
        - go mod tidy
        - go generate ./...
        - go mod tidy
  build_script:
    - cd $(go env GOPATH)/src/github.com/"$CIRRUS_REPO_FULL_NAME"
    - mkdir -p dist
    - cd pkcs11proxy
    - CGO_ENABLED=1 go build -buildmode c-shared -o ../dist/libpkcs11proxy.so
    - cd ../p11proxy
    - CGO_ENABLED=1 go build -buildmode c-shared -o ../dist/libp11proxy.so
  dist_script:
    - mv $(go env GOPATH)/src/github.com/"$CIRRUS_REPO_FULL_NAME"/dist/*.so ./
    - mkdir -p ./dist
    - tar -caf ./dist/pkcs11mod.tar.gz ./*.so
  binaries_artifacts:
    path: "dist/*"
  env:
    GO_VERSION: latest

task:
  name: "chromium"
  container:
    image: fedora:latest
    cpu: 1
    memory: 1G
  install_script:
    - dnf install -y chromium
    - curl -o pkcs11mod.tar.gz https://api.cirrus-ci.com/v1/artifact/build/$CIRRUS_BUILD_ID/Compile%20Go%20latest%20linux%20amd64/binaries/dist/pkcs11mod.tar.gz
    - tar -xaf ./pkcs11mod.tar.gz
  test_script:
    - testdata/ci-chromium-tests.bash
  depends_on:
    - "Compile Go latest linux amd64"

task:
  name: "firefox"
  container:
    image: fedora:latest
    cpu: 1
    memory: 1G
  install_script:
    - dnf install -y firefox
    - curl -o pkcs11mod.tar.gz https://api.cirrus-ci.com/v1/artifact/build/$CIRRUS_BUILD_ID/Compile%20Go%20latest%20linux%20amd64/binaries/dist/pkcs11mod.tar.gz
    - tar -xaf ./pkcs11mod.tar.gz
  test_script:
    - testdata/ci-firefox-tests.bash
  depends_on:
    - "Compile Go latest linux amd64"

task:
  name: "gnutls-cli"
  container:
    image: fedora:latest
    cpu: 1
    memory: 1G
  install_script:
    - dnf install -y gnutls-utils
    - curl -o pkcs11mod.tar.gz https://api.cirrus-ci.com/v1/artifact/build/$CIRRUS_BUILD_ID/Compile%20Go%20latest%20linux%20amd64/binaries/dist/pkcs11mod.tar.gz
    - tar -xaf ./pkcs11mod.tar.gz
  test_script:
    - testdata/ci-gnutls-cli-tests.bash
  depends_on:
    - "Compile Go latest linux amd64"

task:
  name: "opendnssec"
  container:
    image: fedora:latest
    cpu: 1
    memory: 1G
  install_script:
    - dnf install -y git autoconf libtool g++ softhsm opensc diffutils
    - curl -o pkcs11mod.tar.gz https://api.cirrus-ci.com/v1/artifact/build/$CIRRUS_BUILD_ID/Compile%20Go%20latest%20linux%20amd64/binaries/dist/pkcs11mod.tar.gz
    - tar -xaf ./pkcs11mod.tar.gz
  opendnssec_build_script:
    - git clone https://github.com/opendnssec/pkcs11-testing.git
    - cd pkcs11-testing
    - chmod +x autogen.sh
    - ./autogen.sh
    - ./configure --disable-dependency-tracking
    - make install
  test_script:
    - testdata/ci-opendnssec-tests.bash
  depends_on:
    - "Compile Go latest linux amd64"

task:
  name: "pkcs11-dump"
  container:
    image: fedora:latest
    cpu: 1
    memory: 1G
  install_script:
    - dnf install -y pkcs11-dump diffutils
    - curl -o pkcs11mod.tar.gz https://api.cirrus-ci.com/v1/artifact/build/$CIRRUS_BUILD_ID/Compile%20Go%20latest%20linux%20amd64/binaries/dist/pkcs11mod.tar.gz
    - tar -xaf ./pkcs11mod.tar.gz
  test_script:
    - testdata/ci-pkcs11-dump-tests.bash
  depends_on:
    - "Compile Go latest linux amd64"

task:
  name: "tstclnt"
  container:
    image: fedora:latest
    cpu: 1
    memory: 1G
  install_script:
    - dnf install -y nss-tools
    - curl -o pkcs11mod.tar.gz https://api.cirrus-ci.com/v1/artifact/build/$CIRRUS_BUILD_ID/Compile%20Go%20latest%20linux%20amd64/binaries/dist/pkcs11mod.tar.gz
    - tar -xaf ./pkcs11mod.tar.gz
  test_script:
    - export PATH=$PATH:/usr/lib64/nss/unsupported-tools
    - testdata/ci-tstclnt-tests.bash
  depends_on:
    - "Compile Go latest linux amd64"

task:
  name: "wget"
  container:
    image: fedora:latest
    cpu: 1
    memory: 1G
  install_script:
    - dnf install -y wget
    - curl -o pkcs11mod.tar.gz https://api.cirrus-ci.com/v1/artifact/build/$CIRRUS_BUILD_ID/Compile%20Go%20latest%20linux%20amd64/binaries/dist/pkcs11mod.tar.gz
    - tar -xaf ./pkcs11mod.tar.gz
  test_script:
    - testdata/ci-wget-tests.bash
  depends_on:
    - "Compile Go latest linux amd64"

# TODO: Add Windows unit tests

# TODO: "Testing config parsing" from travis.bash

# TODO: Add multiple Go versions to Gox builds and unit tests

# TODO: Add debug stripping and path stripping to Gox for repro builds

# TODO: Re-add darwin/386 for old Go versions where it was supported

# TODO: Fix upload repo for tagged commits (don't use Nightly repo for this)

# TODO: Skip Signify and Release if it's not applicable

# TODO: Signify Nightlies

# TODO: IRC notifications on failure

# TODO: Cron
